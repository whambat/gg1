def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var12 = func3(arg2, var7)
    var33 = func4(var12, var7)
    var34 = func7()
    var37 = class8()
    for var38 in xrange(32):
        var39 = var37.func9
        var39(arg2, var7)
    var40 = -531888112 | arg1 | (var12 & arg1)
    if var34 < var7:
        var41 = var7 - (-828574240 & (arg1 - var40))
    else:
        var41 = var33 | arg2
    var42 = (954 | arg1 | var7) - var40
    var43 = arg1 & var7 - arg2 ^ var34
    var44 = arg1 & var34
    var45 = arg1 | var44
    var46 = (arg1 ^ var12) & 384
    var47 = var7 ^ var42
    if var12 < arg1:
        var48 = (var46 + var33) + var33 & arg2
    else:
        var48 = arg1 ^ (var7 - var44 - arg1)
    if var42 < var40:
        var49 = var40 - var45 + (var33 - 381)
    else:
        var49 = (var42 + var46) & 1927452370 ^ var46
    var50 = var44 | var7 ^ var33 | var46
    var51 = arg1 + arg1 - var42 + var43
    var52 = var45 ^ var42
    var53 = var44 - var44
    var54 = (-638 - var44 ^ var46) ^ var42
    var55 = (arg1 & var40 & var40) ^ var53
    var56 = var45 + (1962037928 ^ var43 - arg1)
    var57 = 615854743 - var53 - var46 + var44
    var58 = var40 & var44
    var59 = 2644437 - (var40 & var58 ^ var42)
    var60 = (var51 | var33) + var33 & var59
    var61 = var57 - var51 - var52 ^ var56
    var62 = var56 ^ (-768 ^ (var59 ^ var33))
    var63 = var59 ^ var55
    var64 = var50 ^ var59 + var54 - var60
    result = (((arg2 | var47) ^ var61 & var7) ^ var45) + (((var42 + var52 ^ (var47 - var34)) | var56) & var7 & arg1)
    return result
class class8(object):
    def func9(self, arg35, arg36):
        result = ((0 ^ 1) + (2029010350 + -537507744 | -1423680053 + arg35)) & arg36
        return result
def func7():
    func5()
    result = len(range(21))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 7
def func4(arg13, arg14):
    var15 = (-740586988 + arg13) ^ arg14
    var16 = var15 ^ arg14 + -483 | 710
    var17 = (var15 ^ arg13) + arg13 + var16
    var18 = var16 - ((88415559 + arg13) & arg14)
    var19 = var16 - arg13 - arg14 | var15
    var20 = arg14 - var16
    var21 = (var20 | (-262 ^ var20)) | var17
    var22 = arg14 ^ var16 | var19 | var20
    var23 = -740 & var15 + var15
    var24 = -180 ^ arg14
    var25 = (var20 + arg13) & arg14 - var21
    if var24 < var21:
        var26 = var23 - var25 & (var23 + var18)
    else:
        var26 = ((var21 + var25) ^ var16) & arg14
    if var25 < arg13:
        var27 = (var21 & var17 - var15) + var19
    else:
        var27 = arg14 - arg14 - arg14 & var15
    var28 = var16 + arg13
    if arg13 < var18:
        var29 = -944 - (var15 | var25 ^ var28)
    else:
        var29 = var22 ^ arg13 + var25
    var30 = var15 ^ (var20 & var18 - -503479037)
    var31 = (var18 ^ arg14) - (var21 + var16)
    var32 = ((-1866283862 | -1814265571) + var18) - var19
    result = (arg13 ^ var28) & var23
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(12):
        var10 += (var10 ^ 9) + var11
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(7):
        var5 += var6 - (var6 ^ -9)
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 65'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
